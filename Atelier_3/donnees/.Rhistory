sd <- sd(donnees)
t <- 2.365
me <- t * sd/sqrt(8)
ICfinal <- c(moy-me,moy+me)
y <- c(moy-me,moy,moy+me)
return(y)
}
w1 <- IC1(g1, g2)
diff1 <- g1-g2
shapiro.test(diff1)
# temps 2 VS temps 3
t.test(g2,g3, paired = T) # Différence significative
w2 <- IC1(g2, g3)
diff2 <- g2-g3
shapiro.test(diff2)
# temps 1 VS temps 3
t.test(g1,g3, paired = T) # Différence significative
w3 <- IC1(g1, g3)
diff3 <- g1-g3
shapiro.test(diff3)
x <- c(1,2,3)
y <- c(w1,w2,w3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2017-2018","2018-2019","2019-2020"), main = "Plaintes transformées en plaintes formelles (en proportion)",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)))
ICp1 <- c(w1[1],w1[3])
ICp3 <- c(w3[1],w3[3])
ICp2 <- c(w2[1],w2[3])
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2017-2018","2018-2019","2019-2020"), main = "Plaintes transformées en plaintes formelles (en proportion)",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)))
# temps 1 VS temps 2
t.test(g1,g2, paired = T) # Différence significative
graph <- boxplot(ICp1,ICp2,ICp3, names = c("Score temps 1 VS temps 2","2018-2019","2019-2020"), main = "Plaintes transformées en plaintes formelles (en proportion)",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)))
graph <- boxplot(ICp1,ICp2,ICp3, names = c("Temps 1 et 2","Temps 2 et 3","Temps 1 et 3"), main = "Différence entre le temps 1,2 et 3 pour le score relatif aux questionnaires",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)))
graph <- boxplot(ICp1,ICp2,ICp3, names = c("Temps 1 et 2","Temps 2 et 3","Temps 1 et 3"), main = "Différence entre le temps 1,2 et 3 pour le score relatif aux questionnaires",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)), ylim = c(-30,30))
abline(h = 0, col="black", lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("Temps 1 et 2","Temps 2 et 3","Temps 1 et 3"), main = "Différences entre le temps 1,2 et 3 pour le score relatif aux questionnaires",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)), ylim = c(-30,30))
abline(h = 0, col="black", lwd=3, lty=3)
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("Temps 1 et 2","Temps 2 et 3","Temps 1 et 3"), main = "Différences entre le temps 1,2 et 3 pour le score relatif aux questionnaires",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)), ylim = c(-30,30))
abline(h = 0, col="black", lwd=3, lty=3)
shapiro.test(diff1)
shapiro.test(diff2)
shapiro.test(diff3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("Questionnaire 1 et 2","Questionnaire 2 et 3","Questionnaire 1 et 3"), main = "Différences entre le Questionnaire 1,2 et 3 au niveau du score",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)), ylim = c(-30,30))
abline(h = 0, col="black", lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("Questionnaire 1 et 2","Questionnaire 2 et 3","Questionnaire 1 et 3"), main = "Différences entre le Questionnaire 1,2 et 3 au niveau du score",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)), ylim = c(-20,20))
abline(h = 0, col="black", lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("Questionnaire 1 et 2","Questionnaire 2 et 3","Questionnaire 1 et 3"), main = "Différences entre le Questionnaire 1,2 et 3 au niveau du score",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)), ylim = c(-20,20))
abline(h = 0, col="black", lwd=3, lty=3)
# temps 1 VS temps 2
t.test(g1,g2, paired = T) # Différence significative
# temps 2 VS temps 3
t.test(g2,g3, paired = T) # Différence significative
# temps 1 VS temps 3
t.test(g1,g3, paired = T) # Différence significative
wilcox.test(g1,g2, paired = T)
wilcox.test(g2,g3, paired = T)
wilcox.test(g1,g3, paired = T)
demandes <- c(237,390,467,577,380,318,391)
annees <- c("2024-2025","2025-2026","2026-2027","2027-2028","2028-2029","2029-2030","2030-2031")
plot(annees,demandes)
library("dplyr")
library("ggpubr")
library(ggplot2)
library(riskyr)
library(hrbrthemes)
temp <- c(-11.1,-9.7,-3.8,4.1,11.2,16.6,19.9,18,13.3,7.3,0.5,-8.1)
mois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
x <- seq(1:12)
couleur <- c("blue","blue","blue","yellow","orange","orange","red","orange","orange","yellow","white","blue")
polygon(c(-min(x)^2,-min(x)^2,max(x)^2,max(x)^2),c(-min(temp)^2,max(temp)^2,max(temp)^2,-min(temp)^2), col=rgb(34, 170, 34, maxColorValue = 255))
par(new=T)
plot(x, temp, main = "Courbe de température au Québec", col = couleur, pch=9, type="b",las=2)
nmois <- as.factor(mois)
plot(nmois, temp, main = "Courbe de température au Québec", col = couleur, pch=9, type="b",las=2)
qplot(x,temp, geom=c("point", "line"), main = "Courbe de température au Québec", color = couleur)
data <- data.frame(
day = c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"),
value = temp
)
# Most basic bubble plot
p <- ggplot(data, aes(x=day, y=value)) +
geom_line( color="steelblue") +
geom_point() +
xlab("") +
theme_ipsum() +
theme(axis.text.x=element_text(angle=60, hjust=1)) +
ylim(-20,25)
# TESTING 1-2
couleur <- c("blue","blue","blue","yellow","orange","orange","red","orange","orange","yellow","white","blue")
temp <- c(-11.1,-9.7,-3.8,4.1,11.2,16.6,19.9,18,13.3,7.3,0.5,-8.1)
mois <- c("Jan.","Fév.", "Mar.", "Avr.", "Mai.", "Jui.", "Jui.", "Aou.", "Sep.", "Oct.", "Nov.", "Dec.")
plot.new()
par(mar = c(4,4,3,4))
position <- barplot(temp, col = couleur, names.arg = mois, axes = F, ylab = "", xlab = "", main = "Courbe de température au Québec", ylim = c(-25,25), las = 2, space = 0, cex.main = 0.8)
axis(2,col="black",at=seq(-15, 25, by=5))
par(new = TRUE, mar = c(4,4,3,4))
maximal <- max(position)+(position[2]-position[1])
plot(position, temp, type = "o", lwd=2,pch=16,axes=F,ylab = "", xlab = "", ylim = c(-15,25), xlim=c(0,length(temp)))
mtext("Température (°C)", side=2,line=2,cex=1.1)
mtext("Mois", side=1, line=2.5, cex=1.1)
MaListe <- list()
MaListe[[1]] <- c(1,2)
MaListe[[2]] <- matrix(c("A","B","C","D"), nrow = 2, ncol = 2)
MaListe
MaListe[1]
MaListe[[1]]
MaListe[1][1]
MaListe[1][1][1][1]
MaListe[[1]][1]
#Trois proportions:
n1 <- 35000
p1 <- 380/n1
n2 <- 34000
p2 <- 318/n2
n3 <- 34500
p3 <- 433/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2017-2018","2018-2019","2019-2020"), main = "Évolution des nouvelles demandes d'assistance (en terme de proportion)",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)))
abline(h = ICp1[1], col="orange", lwd=3, lty=3)
abline(h = ICp2[2], col=rgb(0.6,0.8,0), lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2017-2018","2018-2019","2019-2020"), main = "Évolution des nouvelles demandes d'assistance (en terme de proportion)",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
#Trois proportions:
n1 <- 37248
p1 <- 380/n1
n2 <- 37943
p2 <- 318/n2
n3 <- 37998
p3 <- 433/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Évolution des nouvelles demandes d'assistance (en terme de proportion)",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
getwd()
#Trois proportions:
n1 <- 12287
p1 <- 125/n1
n2 <- 12623
p2 <- 110/n2
n3 <- 12815
p3 <- 163/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2017-2018","2018-2019","2019-2020"), main = "Proportion des demandes d'assistance de la population étudiante du 2e cycle",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)))
abline(h = ICp1[1], col="orange", lwd=3, lty=3)
abline(h = ICp2[2], col=rgb(0.6,0.8,0), lwd=3, lty=3)
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0.6,0.8,0), lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2017-2018","2018-2019","2019-2020"), main = "Proportion des demandes d'assistance de la population étudiante du 2e cycle",col=c("orange",rgb(0.6,0.8,0),rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0.6,0.8,0), lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2017-2018","2018-2019","2019-2020"), main = "Proportion des demandes d'assistance de la population étudiante du 2e cycle",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0.6,0.8,0), lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2017-2018","2018-2019","2019-2020"), main = "Proportion des demandes d'assistance de la population étudiante du 2e cycle",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes d'assistance de la population étudiante du 2e cycle",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
#Trois proportions:
n1 <- 2241
p1 <- 146/n1
n2 <- 2195
p2 <- 115/n2
n3 <- 2181
p3 <- 156/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes d'assistance de la population étudiante du 3e cycle",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
#Trois proportions:
n1 <- 16781
p1 <- 24/n1
n2 <- 17006
p2 <- 12/n2
n3 <- 16760
p3 <- 18/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes d'assistance de la population étudiante du 3e cycle",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes d'assistance de la population étudiante du 1er cycle",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
#Trois proportions:
n1 <- 16760
p1 <- 18/n1
n2 <- 12815
p2 <- 163/n2
n3 <- 2181
p3 <- 156/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("1er cycle","2e cycle","3e cycle"), main = "Proportion des demandes d'assistance de la population étudiante (2030-2031)",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
#Trois proportions:
n1 <- 2241
p1 <- 146/n1
n2 <- 2195
p2 <- 115/n2
n3 <- 2181
p3 <- 156/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes d'assistance de la population étudiante du 3e cycle",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
#Trois proportions:
n1 <- 16760
p1 <- 18/n1
n2 <- 12815
p2 <- 163/n2
n3 <- 2181
p3 <- 156/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes d'assistance de la population étudiante du 3e cycle",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes d'assistance de la population étudiante du 3e cycle",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("1er cycle","2e cycle","3e cycle"), main = "Proportion des demandes d'assistance de la population étudiante en 2030-2031",col=c("red","brown","yellow"))
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("1er cycle","2e cycle","3e cycle"), main = "Proportion des demandes d'assistance de la population étudiante en 2030-2031",col=c("cyan","brown","yellow"))
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
#Trois proportions:
n1 <- 380
p1 <- 218/n1
n2 <- 318
p2 <- 192/n2
n3 <- 433
p3 <- 266/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("1er cycle","2e cycle","3e cycle"), main = "Proportion des demandes d'assistance de la population étudiante en 2030-2031",col=c("cyan","brown","yellow"))
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes de consultation à travers les années",col=c("cyan","brown","yellow"))
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes de consultation à travers les années",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes de consultation à travers les années",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes de consultation (par rapport au total) à travers les années",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des demandes de consultation à travers les années",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
#Trois proportions:
n1 <- (85+36)
p1 <- 85/n1
n2 <- (43+69)
p2 <- 43/n2
n3 <- (45+62)
p3 <- 62/n3
me1 <- 1.96 * sqrt((p1*(1-p1))/n1)
me2 <- 1.96 * sqrt((p2*(1-p2))/n2)
me3 <- 1.96 * sqrt((p3*(1-p3))/n3)
ICp1 <- c(p1-me1,p1+me1)
ICp2 <- c(p2-me2,p2+me2)
ICp3 <- c(p3-me3,p3+me3)
y1 <- c(p1-me1,p1,p1+me1)
y2 <- c(p2-me2,p2,p2+me2)
y3 <- c(p3-me3,p3,p3+me3)
x <- c(1,2,3)
y <- c(y1,y2,y3)
graph <- boxplot(ICp1,ICp2,ICp3, names = c("2028-2029","2029-2030","2030-2031"), main = "Proportion des nettoyages de données requis avant l'analyse",col=c(rgb(0.6,0.8,0),"orange",rgb(0,0.5,1)))
abline(h = ICp2[2], col="orange", lwd=3, lty=3)
abline(h = ICp3[1], col=rgb(0,0.5,1), lwd=3, lty=3)
points(x,graph$stats[3,],type="o",col="black",pch=16,lwd=2)
matrix(1:12, nrow = 4, ncol=3)*c(1,20)
matrix(1:12, nrow = 3, ncol=4)*c(1,20)
matrix(1:12, nrow = 4, ncol=3)*c(1,20)
matrix(1:12, nrow = 3, ncol=4)*c(1,20)
matrix(1:12, nrow = 3, ncol=4)*c(1,12)
r <- 0.3
N <- 220
K <- 200000
step <- 1
while(N < K/2) {
N <- N + r * N * (1 - N/K)
step <- step + 1
}
step
r <- 0.3
N <- 220
K <- 200000
step <- 0
while(N < K/2) {
N <- N + r * N * (1 - N/K)
step <- step + 1
}
step
r <- 0.3
K <- 200000
n_steps <- 115
N <- numeric(n_steps)
N[0] <- 220
for(i in 1:(n_steps)) {
N[i] <- N[i-1] + r * N[i-1] * (1 - N[i-1]/K)
}
r <- 0.3
K <- 200000
n_steps <- 114
N <- numeric(n_steps)
N[0] <- 220
for(i in 1:(n_steps)) {
N[i] <- N[i-1] + r * N[i-1] * (1 - N[i-1]/K)
}
N[1] <- 220
for(i in 2:(n_steps+1)) {
N[i] <- N[i-1] + r * N[i-1] * (1 - N[i-1]/K)
}
N[25:30]
etape <- numeric(n_steps)
etape[1] <- 0
for(i in 2:(n_steps+1)) {
N[i] <- N[i-1] + r * N[i-1] * (1 - N[i-1]/K)
etape[i] <- etape + 1
}
for(i in 2:(n_steps+1)) {
N[i] <- N[i-1] + r * N[i-1] * (1 - N[i-1]/K)
etape[i] <- etape[i-1] + 1
}
N[25:30]
etape
N[27]
etape[27]
rbinom(n = 10, size = 1, prob = 0.5)
rbinom(n = 10, size = 2, prob = 0.5)
rbinom(n = 10, size = 7, prob = 0.5)
rbinom(n = 10, size = 7, prob = 0.5)
rbinom(n = 10, size = 7, prob = 0.5)
rbinom(n = 10, size = 7, prob = 0.5)
rbinom(n = 10, size = 7, prob = 0.5)
rbinom(n = 10, size = 7, prob = 0.5)
rbinom(n = 10, size = 7, prob = 0.5)
rbinom(n = 10, size = 7, prob = 0.5)
rbinom(n = 10, size = 7)
quadrats <- read.table(file = "./quadrats.txt", header=TRUE, sep = ";") # On importe les données
head(quadrats) # On observe le début des données
nrow(quadrats) # On a 500 données
setwd("C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_3/donnees")
quadrats <- read.table(file = "./quadrats.txt", header=TRUE, sep = ";") # On importe les données
head(quadrats) # On observe le début des données
nrow(quadrats) # On a 500 données
mat_trans <- read.table(file = "./matrice_transitions.txt", header = F, sep = "")
mat_trans <- as.matrix(mat_trans)
cetats <- c(2,3,1,0) # États dans l'ordre
cumB <- cumsum(mat_trans[1,]) # Pour la probabilité
cumM <- cumsum(mat_trans[2,]) # Pour la probabilité
cumT <- cumsum(mat_trans[3,]) # Pour la probabilité
cumR <- cumsum(mat_trans[4,]) # Pour la probabilité
coordx <- seq(0,180,20) # Pour le graphique
coordy <- seq(0,980,20) # Pour le graphique
func_etats <- function(etats_prec){
for (j in 1:nrow(quadrats)){
if (etats_prec[j] == 0){
i <- 1; plus_petit = FALSE
while(plus_petit == FALSE){
if (runif(1) < cumR[i]){
etats_prec[j] <- cetats[i]
plus_petit <- TRUE
} else {
i <- i + 1
}
}
} else if (etats_prec[j] == 1){
i <- 1; plus_petit = FALSE
while(plus_petit == FALSE){
if (runif(1) < cumT[i]){
etats_prec[j] <- cetats[i]
plus_petit <- TRUE
} else {
i <- i + 1
}
}
} else if (etats_prec[j] == 2){
i <- 1; plus_petit = FALSE
while(plus_petit == FALSE){
if (runif(1) < cumB[i]){
etats_prec[j] <- cetats[i]
plus_petit <- TRUE
} else {
i <- i + 1
}
}
} else {
i <- 1; plus_petit = FALSE
while(plus_petit == FALSE){
if (runif(1) < cumM[i]){
etats_prec[j] <- cetats[i]
plus_petit <- TRUE
} else {
i <- i + 1
}
}
}
}
return(etats_prec)
}
nb_temps <- function(netape){
# ÉTAT INITIAL
etats <- matrix(0, nrow = nrow(quadrats), ncol = netape)
etats[(quadrats[,5] != 0 | quadrats[,6] != 0 | quadrats[,8] != 0), 1] <- 1 #T
etats[(quadrats[,3] != 0 | quadrats[,9] != 0), 1] <- 2 #B
etats[((quadrats[,3] != 0 | quadrats[,9] != 0) & (quadrats[,5] != 0 | quadrats[,6] != 0 | quadrats[,8] != 0)), 1] <- 3 #M
# 0 signifie R
paysage <- tapply(etats[,1],INDEX = quadrats[,c(1:2)],sum)
par(mar = c(4,4,3,0.5))
image(x=coordx,y=coordy,z=paysage, main = paste("Temps = 1"),xlab=NULL,ylab=NULL,
col=c("black","orange","darkcyan","palegreen3"))
for (n in 1:(netape-1)){
etats[,n+1] <- func_etats(etats[,n])
paysage <- tapply(etats[,n+1],INDEX = quadrats[,c(1:2)],sum)
par(mar = c(4,4,3,0.5))
image(x=coordx,y=coordy,z=paysage, main = paste("Temps = ", n+1) ,xlab=NULL,ylab=NULL,
col=c("black","orange","darkcyan","palegreen3"))
}
return(etats)
}
system.time(nb_temps(10))
View(quadrats)
