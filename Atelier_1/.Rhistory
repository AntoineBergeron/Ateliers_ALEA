nhlcanadtextbn <- read.table(file.choose(), header = TRUE)
is.data.frame(nhlcanadtextbn)
head(nhlcanadtextbn)
View(nhlcanadtextbn)
View(nhlcanadtextbn)
nhlcanadtextbnpv <- read.table(file.choose(), header = TRUE, sep = ";")
View(nhlcanadtextbnpv)
####################################
#####Importation Texte de Excel#####
####################################
nhlcanad <- read.table(file.choose(), header = TRUE, sep = "\t")
nhlcanadcsv <- read_excel("C:/Users/bera1923/Desktop/Présentation Beamer (Intro à R)/Capsule 2/CanadiensC1.xlsx")
View(nhlcanadcsv)
nhlcanadcsv1 <- read_excel("C:/Users/bera1923/Desktop/Présentation Beamer (Intro à R)/Capsule 2/Canadiens.xlsx")
View(nhlcanadcsv1)
View(nhlcanadcsv)
View(nhlcanadcsv1)
View(nhlcanadcsv)
View(nhlcanadcsv1)
View(nhlcanadcsv)
View(nhlcanadcsv1)
nhlcanadcsv <- read_excel("C:/Users/bera1923/Desktop/Présentation Beamer (Intro à R)/Capsule 2/CanadiensC1.xlsx")
View(nhlcanadcsv)
library(readxl)
canad <- read_excel("C:/Users/bera1923/Desktop/Présentation Beamer (Intro à R)/Capsule 2/Canadiens.xlsx")
View(canad)
(1/365)*(1/365)
(1/365)*(1/365) * 12
(1/365)*(1/365) * 6
(1/365)*(1/364) * 12
(1/365)*(1/364) * 6
7!
factorial(7)
factorial(7)/(24*6)
factorial(7)/(120*2)
factorial(4)/(2*2)
6 * (1/365)^2 * (364/365)^2
6 * (1/365)^2 * (364/365)^2 * 100000
6 * (1/365)^2 * (364/365)^5 * 100000
0.0000075*365
1.6*10^(-4)
6 * (1/365)^2 * (364/365)^2 / 4
6 * (1/365)^2 * (364/365)^2 / 5
6 * (1/365)^2 * (364/365)^2 / 3
6 * (1/365)^2 * (364/365)^2 / 2
4.47*10^(-5)
4.47*10^(-5)*2
4.47*10^(-5)*4
6 * ((1/365)^2) * ((364/365)^5)
21 * ((1/365)^2) * ((364/365)^5)
6 * ((1/365)^2) * ((364/365)^2)
NbOrange_1 <- 49
NbOrange_2 <- 0
while (NbOrange_1 > 0) {
NbOrange_1 <- NbOrange_1 - 1
NbOrange_2 <- NbOrange_2 + 1
}
NbOrange_1 <- 48
NbOrange_2 <- 0
for (numero_orange in 1:48){
NbOrange_1 <- NbOrange_1 - 1
NbOrange_2 <- NbOrange_2 + 1
}
NbOrange_1 <- 48
NbOrange_2 <- 0
for (nombre_interaction in 1:(NbOrange_1/2)){
NbOrange_1 <- NbOrange_1 - 2
NbOrange_2 <- NbOrange_2 + 2
}
runif(6, min = 0, max = 6)
valeurs <- 1:6
valeurs <- 1:6
nb_lancer <- 1
if(sample(valeurs,1) = 6)
if(sample(valeurs,1) == 6)
print(paste0("J'ai réussi en ", nb_lancer, "lancers"))
sample(valeurs,1)
print(paste0("J'ai réussi en ", nb_lancer, " lancers"))
if(sample(valeurs,1) == 6)
print(paste0("J'ai réussi en ", nb_lancer, " lancers"))
valeurs <- 1:6
nb_lancer <- 1
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("J'ai réussi en ", nb_lancer, " lancer seulement!"))
} else{
print(paste0("Ça ma pris", nb_lancer, "au total."))
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("J'ai réussi en ", nb_lancer, " lancer seulement!"))
} else{
print(paste0("Ça ma pris", nb_lancer, "au total."))
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("J'ai réussi en ", nb_lancer, " lancer seulement!"))
} else{
print(paste0("Ça ma pris ", nb_lancer, " lancers au total."))
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("Je suis un maître lanceur!"))
} else{
print(paste0("Le dé est forcement truqué..."))
}
if(nb_lancer == 1){
print(paste0("Je suis chanceux!"))
} else if(nb_lancer > 6){
print(paste0("Je suis extrêmement mal chanceux..."))
} else
print(paste0("Je suis mal chanceux."))
if(nb_lancer == 1){
print(paste0("Je suis chanceux!"))
} else if(nb_lancer > 6){
print(paste0("Je suis extrêmement mal chanceux..."))
} else{
print(paste0("Je suis mal chanceux."))
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("Je suis chanceux!"))
} else if(nb_lancer > 6){
print(paste0("Je suis extrêmement mal chanceux..."))
} else{
print(paste0("Je suis mal chanceux."))
}
Après quelques essais infructueux, Thomas se ravise. Il préférerait indiquer à ses amis qu'il a été chanceux si 1 seul lancer fut nécessaire, qu'il n'est pas chanceux lorsque le nombre de lancers fut entre 2 et 6, et qu'il est extrêmement mal chanceux de l'avoir obtenu en plus de 6 lancers.
secteur <- c("Outaouais", "Laurentides", "Lanaudière", "Mauricie", "Capitale-Nationale", "Chaudières-Appalaches",
"Centre-du-Québec", "Montérégie", "Estrie")
atteint_p <- c("Oui","Non")
age <- seq(18:70)
age <- c(18:70)
sample(secteur)
###Définissons les variables
secteur <- c("Outaouais", "Laurentides", "Lanaudière", "Mauricie", "Capitale-Nationale", "Chaudières-Appalaches",
"Centre-du-Québec", "Montérégie", "Estrie")
sample(secteur)
sample(secteur)[1]
sample(secteur)[1]
sample(secteur)[1]
sample(secteur)[1]
sample(secteur)[1]
sample(secteur)[1]
sample(secteur)[1]
sample(secteur)[1]
atteint_p <- c("Oui","Non")
?sample
ndonnees <- 1000
donnees <- matrix(data = NA, nrow = ndonnees, ncol = 4)
donnees[1,]
donnees[1,] <- c(1,2,3,4)
donnees
sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]
sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]
sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]
sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]
sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]
sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]
sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]
sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
pres_att <- c("Oui","Non")
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))[1]
sample(pres_att, prob = c(2/10,8/10))
sample(pres_att, prob = c(2/10,8/10))
sample(pres_att, prob = c(2/10,8/10))
sample(pres_att, prob = c(2/10,8/10))
sample(pres_att, prob = c(2/10,8/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
sample(pres_att, prob = c(1/10,9/10))
###Définissons les variables
secteur <- c("Outaouais", "Laurentides", "Lanaudière", "Mauricie", "Capitale-Nationale", "Chaudières-Appalaches",
"Centre-du-Québec", "Montérégie", "Estrie")
pres_att <- c("Oui","Non")
pass_att <- c("Oui","Non")
age <- c(18:70)
ndonnees <- 1000
donnees <- matrix(data = NA, nrow = ndonnees, ncol = 4)
for (i in 1:ndonnees){
donnees[i,] <- c((sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]), sample(pres_att, prob = c(2/10,8/10))[1], sample(pass_att, prob = c(3/10,7/10))[1], sample(age)[1])
}
View(donnees)
View(donnees)
for (i in 1:ndonnees){
if(donnees[i,2] == donnees[i,3] & donnees[i,2] == "Oui")
donnees[i,2] <- "Non"
}
View(donnees)
colnames(donnees) <- c("Région","Possède la Divoc-91 présentement", "A déjà eu la Divod-91", "Âge de l'individu")
View(donnees)
colnames(donnees) <- c("Région","Possède la Divoc-91 présentement", "A déjà eu la Divoc-91", "Âge de l'individu")
df_donnees <- as.data.frame(donnees)
View(df_donnees)
df_donnees <- as.data.frame(donnees, row.names = F)
View(df_donnees)
sort(df_donnees[,1])
View(df_donnees)
jour_hopital <- c(0:15)
nb_var <- 5
secteur <- c("Outaouais", "Laurentides", "Lanaudière", "Mauricie", "Capitale-Nationale", "Chaudières-Appalaches",
"Centre-du-Québec", "Montérégie", "Estrie")
pres_att <- c("Oui","Non")
pass_att <- c("Oui","Non")
age <- c(18:70)
jour_hopital <- c(0:15)
ndonnees <- 10000
donnees <- matrix(data = NA, nrow = ndonnees, ncol = nb_var)
for (i in 1:ndonnees){
donnees[i,] <- c((sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]), sample(pres_att, prob = c(1/10,9/10))[1], sample(pass_att, prob = c(3/10,7/10))[1], sample(age)[1])
}
for (i in 1:ndonnees){
if(donnees[i,2] == donnees[i,3] & donnees[i,2] == "Oui")
donnees[i,2] <- "Non"
}
colnames(donnees) <- c("Région","Possède la Divoc-91 présentement", "A déjà eu la Divoc-91", "Âge de l'individu")
df_donnees <- as.data.frame(donnees, row.names = F)
###Définissons les variables
nb_var <- 5
secteur <- c("Outaouais", "Laurentides", "Lanaudière", "Mauricie", "Capitale-Nationale", "Chaudières-Appalaches",
"Centre-du-Québec", "Montérégie", "Estrie")
pres_att <- c("Oui","Non")
pass_att <- c("Oui","Non")
age <- c(18:70)
jour_hopital <- c(0:15)
ndonnees <- 10000
donnees <- matrix(data = NA, nrow = ndonnees, ncol = nb_var)
for (i in 1:ndonnees){
donnees[i,] <- c((sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]), sample(pres_att, prob = c(1/10,9/10))[1], sample(pass_att, prob = c(3/10,7/10))[1], sample(age)[1],1)
}
for (i in 1:ndonnees){
if(donnees[i,2] == donnees[i,3] & donnees[i,2] == "Oui")
donnees[i,2] <- "Non"
}
colnames(donnees) <- c("Région","Possède la Divoc-91 présentement", "A déjà eu la Divoc-91", "Âge de l'individu")
colnames(donnees) <- c("Région","Possède la Divoc-91 présentement", "A déjà eu la Divoc-91", "Âge de l'individu", "Nombre de jours passé à l'hôpital")
df_donnees <- as.data.frame(donnees, row.names = F)
View(df_donnees)
0.8 + 0.05 + 0.02 + 0.01+ 0.01+ 0.01+ 0.01+ 0.01+ 0.01+ 0.01+ 0.01+ 0.01+ 0.01+ 0.01+ 0.01+ 0.01
for (i in 1:ndonnees){
if(donnees[i,2] == "Non" & donnees[i,3] == "Non"){
donnees[i,5] <- 0
}else if(donnees[i,2] == "Oui"){
sample(jour_hopital, prob = c(0.8,0.05,0.02,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01))[1]
}else if(donnees[i,3] == "Oui"){
sample(jour_hopital, prob = c(0.65,0.06,0.03,0.02,0.02,0.02,0.02,0.02,0.02,0.02,0.02,0.02,0.02,0.02,0.02,0.02))[1]
}
}
View(df_donnees)
colnames(donnees) <- c("Région","Possède la Divoc-91 présentement", "A déjà eu la Divoc-91", "Âge de l'individu", "Nombre de jours passé à l'hôpital")
df_donnees <- as.data.frame(donnees, row.names = F)
View(df_donnees)
###Définissons les variables
nb_var <- 5
secteur <- c("Outaouais", "Laurentides", "Lanaudière", "Mauricie", "Capitale-Nationale", "Chaudières-Appalaches",
"Centre-du-Québec", "Montérégie", "Estrie")
pres_att <- c("Oui","Non")
pass_att <- c("Oui","Non")
age <- c(18:70)
jour_hopital <- c(0:15)
ndonnees <- 10000
donnees <- matrix(data = NA, nrow = ndonnees, ncol = nb_var)
for (i in 1:ndonnees){
donnees[i,] <- c((sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]), sample(pres_att, prob = c(1/10,9/10))[1], sample(pass_att, prob = c(3/10,7/10))[1], sample(age)[1],1)
}
for (i in 1:ndonnees){
if(donnees[i,2] == donnees[i,3] & donnees[i,2] == "Oui"){
donnees[i,2] <- "Non"
}
}
for (i in 1:ndonnees){
if(donnees[i,2] == "Non" & donnees[i,3] == "Non"){
donnees[i,5] <- 0
}else if(donnees[i,2] == "Oui"){
sample(jour_hopital, prob = c(0.5,0.07,0.04,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03))[1]
}else if(donnees[i,3] == "Oui"){
sample(jour_hopital, prob = c(0.35,0.08,0.05,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04))[1]
}
}
colnames(donnees) <- c("Région","Possède la Divoc-91 présentement", "A déjà eu la Divoc-91", "Âge de l'individu", "Nombre de jours passé à l'hôpital")
df_donnees <- as.data.frame(donnees, row.names = F)
View(df_donnees)
nb_var <- 5
secteur <- c("Outaouais", "Laurentides", "Lanaudière", "Mauricie", "Capitale-Nationale", "Chaudières-Appalaches",
"Centre-du-Québec", "Montérégie", "Estrie")
pres_att <- c("Oui","Non")
pass_att <- c("Oui","Non")
age <- c(18:70)
jour_hopital <- c(0:15)
ndonnees <- 10000
donnees <- matrix(data = NA, nrow = ndonnees, ncol = nb_var)
for (i in 1:ndonnees){
donnees[i,] <- c((sample(secteur, prob = c(1/18,1/18,1/18,1/9,2/9,1/18,1/9,2/9,1/9))[1]), sample(pres_att, prob = c(1/10,9/10))[1], sample(pass_att, prob = c(3/10,7/10))[1], sample(age)[1],1)
}
for (i in 1:ndonnees){
if(donnees[i,2] == donnees[i,3] & donnees[i,2] == "Oui"){
donnees[i,2] <- "Non"
}
}
for (i in 1:ndonnees){
if(donnees[i,2] == "Non" & donnees[i,3] == "Non"){
donnees[i,5] <- 0
}else if(donnees[i,2] == "Oui"){
donnees[i,5] <- sample(jour_hopital, prob = c(0.5,0.07,0.04,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03,0.03))[1]
}else if(donnees[i,3] == "Oui"){
donnees[i,5] <- sample(jour_hopital, prob = c(0.35,0.08,0.05,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04,0.04))[1]
}
}
colnames(donnees) <- c("Région","Possède la Divoc-91 présentement", "A déjà eu la Divoc-91", "Âge de l'individu", "Nombre de jours passé à l'hôpital")
df_donnees <- as.data.frame(donnees, row.names = F)
View(df_donnees)
write.table(df_donnees, file = "./donnees/ExerciceRecapitulatif.csv", sep = ";", row.names = F)
setwd("C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1")
write.table(df_donnees, file = "./donnees/ExerciceRecapitulatif.csv", sep = ";", row.names = F)
donnees <-  read.table(file = './donnees/ExerciceRecapitulatif.csv', sep=";", header = TRUE)
View(donnees)
#####Les transformer en matrice:
donnees <- as.matrix(donnees)
write.table(df_donnees, file = "./donnees/ExerciceRecapitulatif.csv", sep = ";", row.names = F)
donnees
View(donnees)
View(donnees)
#####Charger les données:
donnees <-  read.table(file = './donnees/ExerciceRecapitulatif.csv', sep=";", header = TRUE)
colnames(donnees) <- c("region", "pres_att", "pass_att", "age", "jour_hop")
View(donnees)
#####Les transformer en matrice:
donnees <- as.matrix(donnees)
#####Charger les données:
donnees <-  read.table(file = './donnees/ExerciceRecapitulatif.csv', sep=";", header = TRUE)
colnames(donnees) <- c("region", "pres_att", "pass_att", "age", "jour_hop")
#####Créer un tableau du nombre de jours qu'un patient à passé à l'hôpital en fonction de sa région:
tab_jour_reg <- table(donnees$jour_hop, donnees$region)
tab_jour_reg
tab_jour_reg[1,]
tab_jour_reg[16,]
tab_jour_reg[13,] + tab_jour_reg[14,] + tab_jour_reg[15,] + tab_jour_reg[16,]
tab_jour_reg[14,] + tab_jour_reg[15,] + tab_jour_reg[16,]
#####Trouver combien de personne par région ont été à l'hôpital plus de 12 jours
result1 <- tab_jour_reg[14,] + tab_jour_reg[15,] + tab_jour_reg[16,]
result1
View(donnees)
cout_hop <- c(10,10,10,5,10,5,5,15,5)
result1 * cout_hop
#####Montant gagné par le gouvernement au total
montant_total <- sum(result1 * cout_hop)
cor(tab_jour_reg)
plot(tab_jour_reg)
round(cor(ButsResult),16)
round(cor(tab_jour_reg),16)
plot(tab_jour_reg)
#####Montant gagné par le gouvernement par région
montant_par_reg <- result * cout_hop
#####Montant gagné par le gouvernement par région
montant_par_reg <- result1 * cout_hop
#####Combiner le tableau créer à l'étape 2 avec le montant gagné par le gouvernement par région
TableauFinal <- rbind(tab_jour_reg,montant_par_reg)
View(TableauFinal)
#####Enregistrer le tableau final:
write.table(TableauFinal, file = "./donnees/ExerciceRecapitulatifSOL.csv", sep = ";", row.names = F)
#####Enregistrer le tableau final:
write.table(TableauFinal, file = "./donnees/ExerciceRecapitulatifSOL.csv", sep = ";", row.names = T)
#####Enregistrer le tableau final:
write.table(TableauFinal, file = "./donnees/ExerciceRecapitulatifSOL.csv", sep = ";", row.names = F)
View(TableauFinal)
row.names(TableauFinal)[0] <- "allo"
View(TableauFinal)
View(TableauFinal)
colnames(TableauFinal)[0] <- "allo"
View(TableauFinal)
#####Enregistrer le tableau final:
write.table(TableauFinal, file = "./donnees/ExerciceRecapitulatifSOL.csv", sep = ";", row.names = F)
#####Enregistrer le tableau final:
write.table(TableauFinal, file = "./donnees/ExerciceRecapitulatifSOL.csv", sep = ";")
cbind("qqch",c(0:15))
rbind("qqch",c(0:15))
c("qqch",c(0:15))
#####Ajouter un nom pour les lignes:
nouv_col_1 <- c(c(0:15),"Montant par region")
nouv_col_1
nouv_tab_fin <- cbind(nouv_col_1,TableauFinal)
View(nouv_tab_fin)
#####Ajouter un nom pour les lignes:
jour_hop <- c(c(0:15),"Montant par region")
nouv_tab_fin <- cbind(jour_hop,TableauFinal)
View(nouv_tab_fin)
#####Enregistrer le tableau final:
write.table(nouv_tab_fin, file = "./donnees/ExerciceRecapitulatifSOL.csv", sep = ";")
#####Enregistrer le tableau final:
write.table(nouv_tab_fin, file = "./donnees/ExerciceRecapitulatifSOL.csv", sep = ";", row.names = F)
#####Enregistrer le tableau final:
write.table(nouv_tab_fin, choose.files(""), sep = ";", row.names = F)
#####Enregistrer le tableau final:
write.table(nouv_tab_fin, File = "C:/Users/bera1923/Desktop/Solution des exercices R/ExerciceRecapitulatif", sep = ";", row.names = F)
#####Enregistrer le tableau final:
write.table(nouv_tab_fin, file = "C:/Users/bera1923/Desktop/Solution des exercices R/ExerciceRecapitulatif", sep = ";", row.names = F)
#####Enregistrer le tableau final:
write.table(nouv_tab_fin, file = "C:/Users/bera1923/Desktop/Solution des exercices R/ExerciceRecapitulatif.csv", sep = ";", row.names = F)
#####Charger les données:
donnees <-  read.table(file = './donnees/ExerciceRecapitulatif.csv', sep=";", header = TRUE)
#####Changement des noms de colonnes:
colnames(donnees) <- c("region", "pres_att", "pass_att", "age", "jour_hop")
#####Créer un tableau du nombre de jours qu'un patient à passé à l'hôpital (ligne) en fonction de sa région (colonne):
tab_jour_reg <- table(donnees$jour_hop, donnees$region)
#####Trouver combien de personne par région ont été à l'hôpital au moins 13 jours:
result1 <- tab_jour_reg[14,] + tab_jour_reg[15,] + tab_jour_reg[16,]
#####Créer un vecteur de coût:
cout_hop <- c(10,10,10,5,10,5,5,15,5)
#####Montant gagné par le gouvernement par région:
montant_par_reg <- result1 * cout_hop
#####Combiner le tableau créer à l'étape 2 avec le montant gagné par le gouvernement par région:
TableauFinal <- rbind(tab_jour_reg,montant_par_reg)
#####Ajouter un nom pour les lignes:
jour_hop <- c(c(0:15),"Montant par region")
nouv_tab_fin <- cbind(jour_hop,TableauFinal)
#####Enregistrer le tableau final:
write.table(nouv_tab_fin, file = "C:/Users/bera1923/Desktop/Solution des exercices R/ExerciceRecapitulatifSOL.csv", sep = ";", row.names = F)
result1
#####Charger les données:
donnees <-  read.table(file = './donnees/ExerciceRecapitulatif.csv', sep=";", header = TRUE)
#####Changement des noms de colonnes:
colnames(donnees) <- c("region", "pres_att", "pass_att", "age", "jour_hop")
#####Créer un tableau du nombre de jours qu'un patient à passé à l'hôpital (ligne) en fonction de sa région (colonne):
tab_jour_reg <- table(donnees$jour_hop, donnees$region)
#####Trouver combien de personne par région ont été à l'hôpital au moins 13 jours:
result1 <- tab_jour_reg[14,] + tab_jour_reg[15,] + tab_jour_reg[16,]
#####Créer un vecteur de coût:
cout_hop <- c(10,10,10,5,10,5,5,15,5)
#####Montant gagné par le gouvernement par région:
montant_par_reg <- result1 * cout_hop
#####Combiner le tableau créer à l'étape 2 avec le montant gagné par le gouvernement par région:
TableauFinal <- rbind(tab_jour_reg,montant_par_reg)
#####Ajouter un nom pour les lignes:
jour_hop <- c(c(0:15),"Montant par region")
nouv_tab_fin <- cbind(jour_hop,TableauFinal)
#####Enregistrer le tableau final:
write.table(nouv_tab_fin, file = "C:/Users/bera1923/Desktop/Solution des exercices R/ExerciceRecapitulatifSOL.csv", sep = ";", row.names = F)
View(nouv_tab_fin)
##### Calcul du Pseudo-Code #####
total <- c()
for (i in 2:15){
total[i-1] <- sum(TableauFinal[,i+1])
}
for (i in 2:15){
total[i-1] <- sum(TableauFinal[i+1,])
}
View(TableauFinal)
vrai_total <- sum(total)
