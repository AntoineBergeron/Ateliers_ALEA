result1
result2 <- sim_slopes(fiti, pred = Illiteracy, modx = Murder, modx.values = c(0,1,5,8,12), johnson_neyman = FALSE)
result2
plot(result1)
plot(result2)
plot_summs(result1)
plot_summs(result1, result2)
View(result1)
$result1
result1$
####Peut ajouter la valeur du alpha voulu: alpha = .01 par exemple
####Seule la première phrase nous intéresse (When Murder is OUTSIDE the interval...)
####On peut choisir le range du modérateur avec mod.range = c(0,10) par exemple.
##################################
#################################
##################################
#################################
#################################
###TEST avec valeurs aléatoires
Z <- 9*runif(50,0.5)
result1
result1$slopes
result1$slopes[1]
result1$slopes[2,1]
result1$slopes[1,2]
mean(Murder)
Murder
states
mean(states[,5])
states[,5]
sd(states[,5])
u <- mean(states[,5])
ET <- sd(states[,5])
plot(u - ET)
fiti <- lm(Income ~ Illiteracy * Murder + `HS Grad`, data = states) #Utilisation de lm() pour fit un modèle linéaire
summ(fiti) #Sommaire de notre modèle linéaire
fiti$coefficients
fiti$coefficients[,1]
fiti$coefficients[1]
fiti$coefficients[1]*2
fiti <- lm(Income ~ Illiteracy * Murder, data = states) #Utilisation de lm() pour fit un modèle linéaire
summ(fiti) #Sommaire de notre modèle linéaire
fiti$coefficients[1] + fiti$coefficients[2]*X + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*X
plot(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x)
plot.function(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x)
states <- as.data.frame(state.x77) #création de mon tableau de données
fiti <- lm(Income ~ Illiteracy * Murder, data = states) #Utilisation de lm() pour fit un modèle linéaire
summ(fiti) #Sommaire de notre modèle linéaire
result1 <- sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = FALSE) ###variable X, variable Z, Non-Application de J-N
result1
result2 <- sim_slopes(fiti, pred = Illiteracy, modx = Murder, modx.values = c(0,1,5,8,12), johnson_neyman = FALSE)
result2
plot(result1)
plot(result2)
plot_summs(result1, result2)
result3 <- sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = TRUE) ###variable X, variable Z, Application de J-N
result3
result4 <- johnson_neyman(fiti, Illiteracy, modx = Murder, mod.range = c(-5,25))
result4
function(x) = 2x
function(x) {2x}
f <- function(x)
f <- function(x)
{
fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x
}
plot.function(f)
plot.function(f, from = 1, to = 5, 100)
plot.function(f, from = 1, to = 5, n =100)
View(f)
curve(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x)
u <- mean(states[,5])
ET <- sd(states[,5])
curve(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x)
curve(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u) + fiti$coefficients[4]*(u)*x)
curve(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u+ET) + fiti$coefficients[4]*(u+ET)*x)
par(mfrow = c(3,3))
curve(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x)
curve(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u) + fiti$coefficients[4]*(u)*x)
curve(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u+ET) + fiti$coefficients[4]*(u+ET)*x)
curve(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x)
lines(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u) + fiti$coefficients[4]*(u)*x)
x <- seq(0,5,0.2)
curve(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x)
lines(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u) + fiti$coefficients[4]*(u)*x)
lines(fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u+ET) + fiti$coefficients[4]*(u+ET)*x)
eq1 <- fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x
eq2 <- fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u) + fiti$coefficients[4]*(u)*x
eq3 <- fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u+ET) + fiti$coefficients[4]*(u+ET)*x
x <- seq(0,5,0.1)
eq1 <- fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x
eq2 <- fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u) + fiti$coefficients[4]*(u)*x
eq3 <- fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u+ET) + fiti$coefficients[4]*(u+ET)*x
plot(eq1,eq2,eq3)
curve(eq1,eq2,eq3)
eq1 <- fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u-ET) + fiti$coefficients[4]*(u-ET)*x
eq2 <- fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u) + fiti$coefficients[4]*(u)*x
eq3 <- fiti$coefficients[1] + fiti$coefficients[2]*x + fiti$coefficients[3]*(u+ET) + fiti$coefficients[4]*(u+ET)*x
curve(eq1,eq2,eq3)
plot(x,eq1)
lines(x,eq2)
lines(x,eq1)
library(ggplot)
install.packages("ggplot2")
install.packages("ggplot2")
detach("package:base", unload = TRUE)
library(base, lib.loc = "C:/Program Files/R/R-3.6.1/library")
x <- 4 - 2*y
y <- 1
y <- 1
x <- 4 - 2*y
x
y
$x
c(x,y)
x. y
x, y
W <- 4
Z = W^(3/2) + 1,7
W <- 4
Z = W^(3/2) + 1.7
W
Z
W = 4
Z = W^(3/2) + 1.7
W
Z
nhlcanad = read.table(file.choose(), header = TRUE, sep = "\t")
head(nhlcanad)
nhlcanad1 = read.table(file.choose(), header = TRUE, sep = "\t")
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
View(nhlcanad1)
names(nhlcanad)
nhlcanadcsv = read.csv(file.choose(), header = TRUE)
nhlcanadcsv = read.csv2(file.choose(), header = TRUE)
nhlcanadcsv = read.csv2(file.choose())
library(readxl)
Canadiens <- read_excel("C:/Users/bera1923/Desktop/Présentation Beamer (Intro à R)/Capsule 2/Canadiens.xlsx")
View(Canadiens)
nhlcanadtextbn <- read.table(file.choose(), header = TRUE, sep = "\t")
nhlcanadtextbn <- read.table(file.choose(), header = TRUE)
is.data.frame(nhlcanadtextbn)
head(nhlcanadtextbn)
View(nhlcanadtextbn)
View(nhlcanadtextbn)
nhlcanadtextbnpv <- read.table(file.choose(), header = TRUE, sep = ";")
View(nhlcanadtextbnpv)
####################################
#####Importation Texte de Excel#####
####################################
nhlcanad <- read.table(file.choose(), header = TRUE, sep = "\t")
nhlcanadcsv <- read_excel("C:/Users/bera1923/Desktop/Présentation Beamer (Intro à R)/Capsule 2/CanadiensC1.xlsx")
View(nhlcanadcsv)
nhlcanadcsv1 <- read_excel("C:/Users/bera1923/Desktop/Présentation Beamer (Intro à R)/Capsule 2/Canadiens.xlsx")
View(nhlcanadcsv1)
View(nhlcanadcsv)
View(nhlcanadcsv1)
View(nhlcanadcsv)
View(nhlcanadcsv1)
View(nhlcanadcsv)
View(nhlcanadcsv1)
nhlcanadcsv <- read_excel("C:/Users/bera1923/Desktop/Présentation Beamer (Intro à R)/Capsule 2/CanadiensC1.xlsx")
View(nhlcanadcsv)
library(readxl)
canad <- read_excel("C:/Users/bera1923/Desktop/Présentation Beamer (Intro à R)/Capsule 2/Canadiens.xlsx")
View(canad)
(1/365)*(1/365)
(1/365)*(1/365) * 12
(1/365)*(1/365) * 6
(1/365)*(1/364) * 12
(1/365)*(1/364) * 6
7!
factorial(7)
factorial(7)/(24*6)
factorial(7)/(120*2)
factorial(4)/(2*2)
6 * (1/365)^2 * (364/365)^2
6 * (1/365)^2 * (364/365)^2 * 100000
6 * (1/365)^2 * (364/365)^5 * 100000
0.0000075*365
1.6*10^(-4)
6 * (1/365)^2 * (364/365)^2 / 4
6 * (1/365)^2 * (364/365)^2 / 5
6 * (1/365)^2 * (364/365)^2 / 3
6 * (1/365)^2 * (364/365)^2 / 2
4.47*10^(-5)
4.47*10^(-5)*2
4.47*10^(-5)*4
6 * ((1/365)^2) * ((364/365)^5)
21 * ((1/365)^2) * ((364/365)^5)
6 * ((1/365)^2) * ((364/365)^2)
NbOrange_1 <- 49
NbOrange_2 <- 0
while (NbOrange_1 > 0) {
NbOrange_1 <- NbOrange_1 - 1
NbOrange_2 <- NbOrange_2 + 1
}
NbOrange_1 <- 48
NbOrange_2 <- 0
for (numero_orange in 1:48){
NbOrange_1 <- NbOrange_1 - 1
NbOrange_2 <- NbOrange_2 + 1
}
NbOrange_1 <- 48
NbOrange_2 <- 0
for (nombre_interaction in 1:(NbOrange_1/2)){
NbOrange_1 <- NbOrange_1 - 2
NbOrange_2 <- NbOrange_2 + 2
}
runif(6, min = 0, max = 6)
valeurs <- 1:6
valeurs <- 1:6
nb_lancer <- 1
if(sample(valeurs,1) = 6)
if(sample(valeurs,1) == 6)
print(paste0("J'ai réussi en ", nb_lancer, "lancers"))
sample(valeurs,1)
print(paste0("J'ai réussi en ", nb_lancer, " lancers"))
if(sample(valeurs,1) == 6)
print(paste0("J'ai réussi en ", nb_lancer, " lancers"))
valeurs <- 1:6
nb_lancer <- 1
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("J'ai réussi en ", nb_lancer, " lancer seulement!"))
} else{
print(paste0("Ça ma pris", nb_lancer, "au total."))
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("J'ai réussi en ", nb_lancer, " lancer seulement!"))
} else{
print(paste0("Ça ma pris", nb_lancer, "au total."))
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("J'ai réussi en ", nb_lancer, " lancer seulement!"))
} else{
print(paste0("Ça ma pris ", nb_lancer, " lancers au total."))
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("Je suis un maître lanceur!"))
} else{
print(paste0("Le dé est forcement truqué..."))
}
if(nb_lancer == 1){
print(paste0("Je suis chanceux!"))
} else if(nb_lancer > 6){
print(paste0("Je suis extrêmement mal chanceux..."))
} else
print(paste0("Je suis mal chanceux."))
if(nb_lancer == 1){
print(paste0("Je suis chanceux!"))
} else if(nb_lancer > 6){
print(paste0("Je suis extrêmement mal chanceux..."))
} else{
print(paste0("Je suis mal chanceux."))
}
valeurs <- 1:6
nb_lancer <- 1
result <- sample(valeurs,1)
while (result != 6) {
result <- sample(valeurs,1)
nb_lancer <- nb_lancer + 1
}
if(nb_lancer == 1){
print(paste0("Je suis chanceux!"))
} else if(nb_lancer > 6){
print(paste0("Je suis extrêmement mal chanceux..."))
} else{
print(paste0("Je suis mal chanceux."))
}
Après quelques essais infructueux, Thomas se ravise. Il préférerait indiquer à ses amis qu'il a été chanceux si 1 seul lancer fut nécessaire, qu'il n'est pas chanceux lorsque le nombre de lancers fut entre 2 et 6, et qu'il est extrêmement mal chanceux de l'avoir obtenu en plus de 6 lancers.
note <- read.table(file = './donnees/NoteEtudiant.txt', sep="\t", header = TRUE)
parties <- read.table(file = './donnees/parties.txt', sep="\t", header = TRUE)
note <- read.delim("C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt")
View(note)
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
note
as.matrix(note)
Note <- as.matrix(note)
col(Note)
for (pos in 1:ncol(Note)){
Note[2,pos] <- Note[2,pos] + Note[2,pos+1]
}
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
for (pos in 1:(ncol(Note)-1){
for (pos in 1:(ncol(Note)-1)){
Note[2,pos] <- Note[2,pos] + Note[2,pos+1]
}
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
for (pos in 1:(ncol(Note))){
NoteFinal <- NoteFinal + Note[2,pos]
}
NoteFinal <- 0
for (pos in 1:(ncol(Note))){
NoteFinal <- NoteFinal + Note[2,pos]
}
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
for (pos in 1:(ncol(Note))){
SommeNote <- NoteFinal + Note[2,pos]
}
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
for (pos in 1:(ncol(Note))){
SommeNote <- SommeNote + Note[2,pos]
}
Moyenne <- SommeNote/ncol(Note)
blabla <- 0
blabla <- blabla + 2
blabla <- blabla + Note[2,1]
Moyenne
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
for (pos in 2:(ncol(Note))){
SommeNote <- SommeNote + Note[2,pos]
}
Moyenne <- SommeNote/ncol(Note)
note
Note
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
ncol(Note)
for (pos in 2:(ncol(Note))){
SommeNote <- SommeNote + Note[2,pos]
}
Moyenne <- SommeNote/(ncol(Note)-1)
Moyenne
Moyenne <- unname(SommeNote/(ncol(Note)-1))
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
for (pos in 1:(ncol(Note)-1)){
SommeNote <- SommeNote + Note[2,pos]
}
Moyenne <- unname(SommeNote/(ncol(Note)-1))
Note
mean(Note[2,])
Moyenne <- unname(SommeNote/(ncol(Note)))
Moyenne <- unname(SommeNote/(ncol(Note)))
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
for (pos in 1:(ncol(Note))){
SommeNote <- SommeNote + Note[2,pos]
}
Moyenne <- unname(SommeNote/(ncol(Note)))
mean(Note[2,])
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
for (pos in 1:nrow(Note)){
SommeNote <- SommeNote + Note[pos,3]
}
Moyenne <- (SommeNote/nrow(Note))
Moyenne
Moyenne <- unname(SommeNote/nrow(Note))
Moyenne
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
for (posC in 1:nrow(Note)) {
for (pos in 1:(ncol(Note))){
SommeNote <- SommeNote + Note[posC,pos]
}
Moyenne[posC] <- unname(SommeNote/(ncol(Note)))
}
Moyenne <- c()
for (posC in 1:nrow(Note)) {
for (pos in 1:(ncol(Note))){
SommeNote <- SommeNote + Note[posC,pos]
}
Moyenne[posC] <- unname(SommeNote/(ncol(Note)))
}
Note
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
Moyenne <- c()
for (posC in 1:nrow(Note)) {
for (pos in 1:(ncol(Note))){
SommeNote <- SommeNote + Note[posC,pos]
}
Moyenne[posC] <- unname(SommeNote/(ncol(Note)))
SommeNote <- 0
}
mean(Moyenne)
note <- read.table(file = "C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1/donnees/NoteEtudiant.txt", sep="\t", header = TRUE)
Note <- as.matrix(note)
SommeNote <- 0
Moyenne <- 0
for (posC in 1:nrow(Note)) {
for (pos in 1:(ncol(Note))){
SommeNote <- SommeNote + Note[posC,pos]
}
Moyenne <- Moyenne + unname(SommeNote/(ncol(Note)))
SommeNote <- 0
}
MoyenneGen <- Moyenne/nrow(Note)
setwd("C:/Users/bera1923/Desktop/Ateliers_ALEA/Atelier_1")
ButsResult <- read.table(file = "./donnees/ButsResult.txt", sep="\t", header = TRUE)
ButsResult
Mat_ButsResult <- as.matrix(ButsResult)
ButsMoyen <- 1:ncol(Mat_ButsResult)
ButsMoyen <- c(,3)
ButsMoyen <- c()
ButsMoyen[1] <- mean(Mat_ButsResult[,1])
ButsMoyen[2] <- mean(Mat_ButsResult[,2])
ButsMoyen[3] <- mean(Mat_ButsResult[,3])
Butsmo
ButsMoyen
df <- as.data.frame(ButsMoyen)
df
saveRDS(df, file = "ButsMoyenNouv.csv")
?saverds
?saveRDS
saveRDS(df, file = "./donnees/ButsMoyenNouv.csv")
View(df)
View(ButsResult)
View(df)
ButsResult <- read.table(file = "./donnees/ButsResult.txt", sep="\t", header = TRUE)
Mat_ButsResult <- as.matrix(ButsResult)
ButsMoyen[1] <- mean(Mat_ButsResult[,1])
ButsMoyen <- c()
ButsMoyen[1] <- mean(Mat_ButsResult[,1])
ButsMoyen[2] <- mean(Mat_ButsResult[,2])
ButsMoyen[3] <- mean(Mat_ButsResult[,3])
df <- as.data.frame(ButsMoyen)
View(ButsResult)
View(df)
write.table(df, file = "./donnees/ButsResult_N.csv", sep = ",")
write.table(df, file = "./donnees/ButsResult_N.csv", sep = "t")
write.table(df, file = "./donnees/ButsResult_N.csv", sep = "\t")
write.table(df, file = "./donnees/ButsResult_N.csv", sep = ";")
write.table(df, file = "./donnees/ButsResult_N.csv", sep = ";", row.names = F)
ButsResult <- read.table(file = "./donnees/ButsResult.txt", sep="\t", header = TRUE)
ButsMoyen <- c()
ButsResult
ButsResult[1,]
ButsMoyen[1] <- (ButsResult[1,1]*ButsResult[1,2] + ButsResult[2,1]*ButsResult[2,2] + ButsResult[3,1]*ButsResult[3,2] + ButsResult[4,1]*ButsResult[4,2] + ButsResult[5,1]*ButsResult[5,2])/Sum(ButsResult[,1])
ButsMoyen[1] <- (ButsResult[1,1]*ButsResult[1,2] + ButsResult[2,1]*ButsResult[2,2] + ButsResult[3,1]*ButsResult[3,2] + ButsResult[4,1]*ButsResult[4,2] + ButsResult[5,1]*ButsResult[5,2])/sum(ButsResult[,1])
sum(ButsResult[,1])
ButsMoyen[1] <- (ButsResult[1,1]*ButsResult[1,2] + ButsResult[2,1]*ButsResult[2,2] + ButsResult[3,1]*ButsResult[3,2] + ButsResult[4,1]*ButsResult[4,2] + ButsResult[5,1]*ButsResult[5,2] + ButsResult[6,1]*ButsResult[6,2])/sum(ButsResult[,1])
ButsResult[1,1]*ButsResult[1,2] + ButsResult[2,1]*ButsResult[2,2] + ButsResult[3,1]*ButsResult[3,2] + ButsResult[4,1]*ButsResult[4,2] + ButsResult[5,1]*ButsResult[5,2] + ButsResult[6,1]*ButsResult[6,2]
ButsResult[2,1]*ButsResult[2,2]
ButsResult[3,1]*ButsResult[3,2]
ButsResult[3,1]
ButsResult[3,2]
ButsResult
ButsMoyen[1] <- (ButsResult[1,1]*0 + ButsResult[2,1]*1 + ButsResult[3,1]*2 + ButsResult[4,1]*3 + ButsResult[5,1]*4 + ButsResult[6,1]*5)/sum(ButsResult[,1])
ButsMoyen[2] <- (ButsResult[1,2]*0 + ButsResult[2,2]*1 + ButsResult[3,2]*2 + ButsResult[4,2]*3 + ButsResult[5,2]*4 + ButsResult[6,2]*5)/sum(ButsResult[,2])
ButsMoyen[3] <- (ButsResult[1,3]*0 + ButsResult[2,3]*1 + ButsResult[3,3]*2 + ButsResult[4,3]*3 + ButsResult[5,3]*4 + ButsResult[6,3]*5)/sum(ButsResult[,3])
df <- as.data.frame(ButsMoyen)
View(df)
df <- colnames(c("Défaite","Égalité","Victoire"))
df <- as.data.frame(ButsMoyen)
colnames(df) <- c("Défaite","Égalité","Victoire")
df <- t(as.data.frame(ButsMoyen))
View(df)
colnames(df) <- c("Défaite","Égalité","Victoire")
View(df)
write.table(df, file = "./donnees/ButsMoyenTEST.csv", sep = ";", row.names = F)
?colnames
?apply
c(1:3)
?expand.grid
?rbind
